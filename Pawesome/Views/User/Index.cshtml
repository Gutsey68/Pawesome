@using Pawesome.Models.Enums
@model Pawesome.Models.ViewModels.User.ProfileViewModel

@{
    ViewData["Title"] = "Mon Profil";

    string GetStatusVariant(AdvertStatus status) => status switch
    {
        AdvertStatus.Pending => "info",
        AdvertStatus.PendingOffer => "purple",
        AdvertStatus.Active => "success",
        AdvertStatus.Cancelled => "error",
        AdvertStatus.Expired => "warning",
        AdvertStatus.Archived => "secondary",
        AdvertStatus.FullyBooked => "lime",
        _ => "secondary"
    };

    string GetStatusText(AdvertStatus status) => status switch
    {
        AdvertStatus.Pending => "En attente",
        AdvertStatus.PendingOffer => "Offre en attente",
        AdvertStatus.Active => "Active",
        AdvertStatus.Cancelled => "Annulée",
        AdvertStatus.Expired => "Expirée",
        AdvertStatus.Archived => "Archivée",
        AdvertStatus.FullyBooked => "Complétée",
        _ => status.ToString()
    };
}


<main role="main" class="container">
    <div class="profile-header">
        <div>
            @if (!string.IsNullOrEmpty(User.FindFirst("Photo")?.Value))
            {
                <div class="avatar" data-size="xxl">
                    <img class="avatar-image" data-size="xxl" src="@ImageHelper.GetPhotoUrl(Model.Photo)"
                         alt="Image de profil de l'utilisateur"/>
                </div>
            }
            else
            {
                <div class="avatar avatar-fallback" data-size="xxl">
                    @Model.FirstName?.Substring(0, 1).ToUpper() @Model.LastName?.Substring(0, 1).ToUpper()
                </div>
            }
        </div>
        <div class="user-name-bio">
            <div class="user-name-verified">
                <h1>@Model.FirstName @Model.LastName</h1>
                @if (Model.IsVerified)
                {
                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor"
                         stroke-width="3" stroke-linecap="round" stroke-linejoin="round"
                         class="lucide lucide-badge-check-icon lucide-badge-check">
                        <path
                            d="M3.85 8.62a4 4 0 0 1 4.78-4.77 4 4 0 0 1 6.74 0 4 4 0 0 1 4.78 4.78 4 4 0 0 1 0 6.74 4 4 0 0 1-4.77 4.78 4 4 0 0 1-6.75 0 4 4 0 0 1-4.78-4.77 4 4 0 0 1 0-6.76Z"/>
                        <path d="m9 12 2 2 4-4"/>
                    </svg>
                }
            </div>
            @if (!string.IsNullOrEmpty(Model.Bio))
            {
                <p>@Model.Bio</p>
            }
            @if (Model.Rating.HasValue)
            {
                <p class="info-value star-rating">@Html.DisplayStars(Model.Rating)</p>
            }
        </div>
        <a asp-action="Edit" asp-route-id="@Model.Id" class="button" data-variant="secondary" data-size="sm">Modifier le
            profil</a>
    </div>
    <h2 class="section-title">Mes animaux</h2>
    <div class="profile-pets">
        @if (Model.Pets.Any())
        {
            @foreach (var pet in Model.Pets)
            {
                <a asp-controller="Pet" asp-action="Details" asp-route-id="@pet.Id" class="pet-card-link">
                    <div class="pet-card">
                        <div class="pet-image">
                            <img src="@ImageHelper.GetPetPhotoUrl(pet.Photo)" alt="@pet.Name"/>
                        </div>
                        <div class="pet-info">
                            <div class="pet-header">
                                <h3 class="pet-name">@pet.Name</h3>
                            </div>
                            <p class="badge" data-variant="@pet.Species">@pet.Species</p>
                        </div>
                    </div>
                </a>
            }
        }
        else
        {
            <div class="no-pets">
                <p>Vous n'avez pas encore ajouté d'animal</p>
                <a asp-controller="Pet" asp-action="Create" class="button" data-size="sm">Ajouter un animal</a>
            </div>
        }
    </div>
    @if (Model.Pets.Any())
    {
        <a asp-controller="Pet" asp-action="Create" class="button" data-size="sm">
            <span><svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none"
                       stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"
                       class="lucide lucide-circle-plus-icon lucide-circle-plus"><circle cx="12" cy="12" r="10"/><path
                        d="M8 12h8"/><path d="M12 8v8"/></svg></span>
            Ajouter un animal
        </a>
    }
    <section class="user-adverts-section">
        <h2 class="section-title">Mes annonces</h2>
        <div class="tabs-container">
            <div class="tabs-list" role="tablist">
                <button class="tab active" role="tab" aria-selected="true" data-type="all">Toutes mes annonces</button>
                <button class="tab" role="tab" aria-selected="false" data-type="offers">Mes offres</button>
                <button class="tab" role="tab" aria-selected="false" data-type="requests">Mes demandes</button>
            </div>
        </div>

        @if (!Model.Adverts.Any())
        {
            <div class="empty-state">
                <svg xmlns="http://www.w3.org/2000/svg" width="48" height="48" viewBox="0 0 24 24" fill="none"
                     stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"
                     class="lucide lucide-clipboard-list">
                    <rect width="8" height="4" x="8" y="2" rx="1" ry="1"/>
                    <path d="M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2"/>
                    <path d="M12 11h4"/>
                    <path d="M12 16h4"/>
                    <path d="M8 11h.01"/>
                    <path d="M8 16h.01"/>
                </svg>
                <h3>Vous n'avez pas encore d'annonces</h3>
                <p>Créez votre première annonce pour proposer ou rechercher des services de pet sitting.</p>
                <div class="advert-actions-center">
                    <a asp-controller="Advert" asp-action="CreateRequest" class="button" data-variant="primary"
                       data-size="md">Chercher un pet sitter</a>
                    <a asp-controller="Advert" asp-action="CreateOffer" class="button" data-variant="secondary"
                       data-size="md">Proposer mes services</a>
                </div>
            </div>
        }
        else
        {
            <div id="all-adverts" class="adverts-content active">
                <div class="user-adverts-grid">
                    @foreach (var advert in Model.Adverts)
                    {
                        <article class="user-advert-card">
                            <div class="card-header">
                                <span class="advert-badge @(advert.IsPetSitter ? "offer" : "request")">
                                    @(advert.IsPetSitter ? "Offre" : "Demande")
                                </span>
                                <span class="badge"
                                      data-variant="@GetStatusVariant(advert.Status)">@GetStatusText(advert.Status)</span>
                                <span
                                    class="advert-price">@advert.Amount.ToString("C", System.Globalization.CultureInfo.GetCultureInfo("fr-FR"))</span>
                            </div>
                            <div class="card-body">
                                @if (!string.IsNullOrEmpty(advert.City))
                                {
                                    <h3 class="advert-title">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18"
                                             viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"
                                             stroke-linecap="round" stroke-linejoin="round"
                                             class="lucide lucide-map-pin">
                                            <path d="M20 10c0 6-8 12-8 12s-8-6-8-12a8 8 0 0 1 16 0Z"/>
                                            <circle cx="12" cy="10" r="3"/>
                                        </svg>
                                        @advert.City
                                    </h3>
                                }
                                <p class="advert-user-advert-info">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24"
                                         fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round"
                                         stroke-linejoin="round" class="lucide lucide-calendar">
                                        <rect width="18" height="18" x="3" y="4" rx="2"/>
                                        <line x1="16" x2="16" y1="2" y2="6"/>
                                        <line x1="8" x2="8" y1="2" y2="6"/>
                                        <line x1="3" x2="21" y1="10" y2="10"/>
                                    </svg>
                                    Du @advert.StartDate.ToString("dd/MM/yyyy") au @advert.EndDate.ToString("dd/MM/yyyy")
                                </p>

                                @if (advert.Pets.Any())
                                {
                                    <div>
                                        <p class="form-label">Animaux :</p>
                                        <div class="pets-tags">
                                            @foreach (var pet in advert.Pets)
                                            {
                                                <span class="badge" data-variant="@pet.AnimalTypeName"
                                                      data->@pet.AnimalTypeName</span>
                                            }
                                        </div>
                                    </div>
                                }

                                @if (!string.IsNullOrEmpty(advert.AdditionalInformation))
                                {
                                    <p class="description-text">
                                        @(advert.AdditionalInformation.Length > 100 ? advert.AdditionalInformation.Substring(0, 100) + "..." : advert.AdditionalInformation)
                                    </p>
                                }

                                <div class="mt-3">
                                    <a asp-controller="Advert" asp-action="Details" asp-route-id="@advert.Id"
                                       class="button"
                                       data-variant="outline" data-size="sm">Voir les détails</a>
                                </div>
                            </div>
                            <div class="card-footer">
                                <svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 24 24"
                                     fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round"
                                     stroke-linejoin="round" class="lucide lucide-clock"
                                     style="margin-right: var(--space-1);">
                                    <circle cx="12" cy="12" r="10"/>
                                    <polyline points="12 6 12 12 16 14"/>
                                </svg>
                                <span>
                                    Publié le @advert.CreatedAt.ToString("dd/MM/yyyy")
                                </span>
                            </div>
                        </article>
                    }
                </div>
            </div>

            <div id="offers-adverts" class="adverts-content">
                <div class="user-adverts-grid">
                    @foreach (var advert in Model.Adverts.Where(a => a.IsPetSitter))
                    {
                        <article class="user-advert-card">
                            <div class="card-header">
                                <span class="advert-badge offer">Offre</span>
                                <span class="badge"
                                      data-variant="@GetStatusVariant(advert.Status)">@GetStatusText(advert.Status)</span>
                                <span class="advert-price">@advert.Amount.ToString("C")</span>
                            </div>
                            <div class="card-body">
                                @if (!string.IsNullOrEmpty(advert.City))
                                {
                                    <h3 class="advert-title">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18"
                                             viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"
                                             stroke-linecap="round" stroke-linejoin="round"
                                             class="lucide lucide-map-pin">
                                            <path d="M20 10c0 6-8 12-8 12s-8-6-8-12a8 8 0 0 1 16 0Z"/>
                                            <circle cx="12" cy="10" r="3"/>
                                        </svg>
                                        @advert.City
                                    </h3>
                                }
                                <p class="user-advert-info">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24"
                                         fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round"
                                         stroke-linejoin="round" class="lucide lucide-calendar">
                                        <rect width="18" height="18" x="3" y="4" rx="2"/>
                                        <line x1="16" x2="16" y1="2" y2="6"/>
                                        <line x1="8" x2="8" y1="2" y2="6"/>
                                        <line x1="3" x2="21" y1="10" y2="10"/>
                                    </svg>
                                    Du @advert.StartDate.ToString("dd/MM/yyyy") au @advert.EndDate.ToString("dd/MM/yyyy")
                                </p>

                                @if (advert.Pets.Any())
                                {
                                    <div>
                                        <p class="form-label">Animaux :</p>
                                        <div class="pets-tags">
                                            @foreach (var pet in advert.Pets)
                                            {
                                                <span class="badge" data-variant="@pet.AnimalTypeName"
                                                      data->@pet.AnimalTypeName</span>
                                            }
                                        </div>
                                    </div>
                                }

                                @if (!string.IsNullOrEmpty(advert.AdditionalInformation))
                                {
                                    <p class="description-text">
                                        @(advert.AdditionalInformation.Length > 100 ? advert.AdditionalInformation.Substring(0, 100) + "..." : advert.AdditionalInformation)
                                    </p>
                                }

                                <div class="mt-3">
                                    <a asp-controller="Advert" asp-action="Details" asp-route-id="@advert.Id"
                                       class="button"
                                       data-variant="outline" data-size="sm">Voir les détails</a>
                                </div>
                            </div>
                            <div class="card-footer">
                                <svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 24 24"
                                     fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round"
                                     stroke-linejoin="round" class="lucide lucide-clock"
                                     style="margin-right: var(--space-1);">
                                    <circle cx="12" cy="12" r="10"/>
                                    <polyline points="12 6 12 12 16 14"/>
                                </svg>
                                <span>
                                    Publié le @advert.CreatedAt.ToString("dd/MM/yyyy")
                                </span>
                            </div>
                        </article>
                    }
                    @if (!Model.Adverts.Any(a => a.IsPetSitter))
                    {
                        <div class="empty-state" style="grid-column: 1 / -1;">
                            <svg xmlns="http://www.w3.org/2000/svg" width="48" height="48" viewBox="0 0 24 24"
                                 fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round"
                                 stroke-linejoin="round" class="lucide lucide-clipboard-list">
                                <rect width="8" height="4" x="8" y="2" rx="1" ry="1"/>
                                <path d="M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2"/>
                                <path d="M12 11h4"/>
                                <path d="M12 16h4"/>
                                <path d="M8 11h.01"/>
                                <path d="M8 16h.01"/>
                            </svg>
                            <h3>Vous n'avez pas encore d'offres de services</h3>
                            <p>Créez votre première offre pour proposer vos services de pet sitting.</p>
                            <div class="advert-actions-center">
                                <a asp-controller="Advert" asp-action="CreateOffer" class="button"
                                   data-variant="primary" data-size="md">Proposer mes services</a>
                            </div>
                        </div>
                    }
                </div>
            </div>

            <div id="requests-adverts" class="adverts-content">
                <div class="user-adverts-grid">
                    @foreach (var advert in Model.Adverts.Where(a => !a.IsPetSitter))
                    {
                        <article class="user-advert-card">
                            <div class="card-header">
                                <span class="advert-badge request">Demande</span>
                                <span class="badge"
                                      data-variant="@GetStatusVariant(advert.Status)">@GetStatusText(advert.Status)</span>
                                <span class="advert-price">@advert.Amount.ToString("C")</span>
                            </div>
                            <div class="card-body">
                                @if (!string.IsNullOrEmpty(advert.City))
                                {
                                    <h3 class="advert-title">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18"
                                             viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"
                                             stroke-linecap="round" stroke-linejoin="round"
                                             class="lucide lucide-map-pin">
                                            <path d="M20 10c0 6-8 12-8 12s-8-6-8-12a8 8 0 0 1 16 0Z"/>
                                            <circle cx="12" cy="10" r="3"/>
                                        </svg>
                                        @advert.City
                                    </h3>
                                }
                                <p class="user-advert-info">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24"
                                         fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round"
                                         stroke-linejoin="round" class="lucide lucide-calendar">
                                        <rect width="18" height="18" x="3" y="4" rx="2"/>
                                        <line x1="16" x2="16" y1="2" y2="6"/>
                                        <line x1="8" x2="8" y1="2" y2="6"/>
                                        <line x1="3" x2="21" y1="10" y2="10"/>
                                    </svg>
                                    Du @advert.StartDate.ToString("dd/MM/yyyy") au @advert.EndDate.ToString("dd/MM/yyyy")
                                </p>

                                @if (advert.Pets.Any())
                                {
                                    <div>
                                        <p class="form-label">Animaux :</p>
                                        <div class="pets-tags">
                                            @foreach (var pet in advert.Pets)
                                            {
                                                <span class="badge" data-variant="@pet.AnimalTypeName"
                                                      data->@pet.AnimalTypeName</span>
                                            }
                                        </div>
                                    </div>
                                }

                                @if (!string.IsNullOrEmpty(advert.AdditionalInformation))
                                {
                                    <p class="description-text">
                                        @(advert.AdditionalInformation.Length > 100 ? advert.AdditionalInformation.Substring(0, 100) + "..." : advert.AdditionalInformation)
                                    </p>
                                }

                                <div class="mt-3">
                                    <a asp-controller="Advert" asp-action="Details" asp-route-id="@advert.Id"
                                       class="button"
                                       data-variant="outline" data-size="sm">Voir les détails</a>
                                </div>
                            </div>
                            <div class="card-footer">
                                <svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 24 24"
                                     fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round"
                                     stroke-linejoin="round" class="lucide lucide-clock"
                                     style="margin-right: var(--space-1);">
                                    <circle cx="12" cy="12" r="10"/>
                                    <polyline points="12 6 12 12 16 14"/>
                                </svg>
                                <span>
                                    Publié le @advert.CreatedAt.ToString("dd/MM/yyyy")
                                </span>
                            </div>
                        </article>
                    }
                    @if (!Model.Adverts.Any(a => !a.IsPetSitter))
                    {
                        <div class="empty-state" style="grid-column: 1 / -1;">
                            <svg xmlns="http://www.w3.org/2000/svg" width="48" height="48" viewBox="0 0 24 24"
                                 fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round"
                                 stroke-linejoin="round" class="lucide lucide-clipboard-list">
                                <rect width="8" height="4" x="8" y="2" rx="1" ry="1"/>
                                <path d="M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2"/>
                                <path d="M12 11h4"/>
                                <path d="M12 16h4"/>
                                <path d="M8 11h.01"/>
                                <path d="M8 16h.01"/>
                            </svg>
                            <h3>Vous n'avez pas encore de demandes de pet sitting</h3>
                            <p>Créez votre première demande pour rechercher un pet sitter.</p>
                            <div class="advert-actions-center">
                                <a asp-controller="Advert" asp-action="CreateRequest" class="button"
                                   data-variant="primary" data-size="md">Demander un pet sitter</a>
                            </div>
                        </div>
                    }
                </div>
            </div>
        }
    </section>
    <section class="user-info-section">
        <h2 class="section-title">Informations personnelles</h2>
        <div class="info-cards">
            <div class="info-card">
                <h3>Contact</h3>
                <div class="info-list">
                    <div class="info-item">
                        <span class="info-label">Email</span>
                        <span class="info-value">@Model.Email</span>
                    </div>
                    <div class="info-item">
                        <span class="info-label">Téléphone</span>
                        <span
                            class="info-value">@(string.IsNullOrEmpty(Model.PhoneNumber) ? "Non renseigné" : Model.PhoneNumber)</span>
                    </div>
                </div>
            </div>
            <div class="info-card">
                <h3>Statut du compte</h3>
                <div class="info-list">
                    <div class="info-item">
                        <span class="info-label">Solde</span>
                        <span class="info-value">@Model.BalanceAccount.ToString("C")</span>
                    </div>
                    <div class="info-item">
                        <a asp-controller="Balance" asp-action="Index" class="underline">Voir mon solde</a>
                    </div>
                    <div class="info-item">
                        <span class="info-label">Membre depuis</span>
                        <span class="info-value">@Model.CreatedAt.ToString("d MMMM yyyy")</span>
                    </div>
                </div>
            </div>
            <div class="info-card">
                <h3>Adresse</h3>
                <div class="info-list">
                    <div class="info-item">
                        <span class="info-label">Rue</span>
                        <span
                            class="info-value">@(string.IsNullOrEmpty(Model.Street) ? "Non renseigné" : Model.Street)</span>
                    </div>
                    <div class="info-item">
                        <span class="info-label">Code postal</span>
                        <span
                            class="info-value">@(string.IsNullOrEmpty(Model.PostalCode) ? "Non renseigné" : Model.PostalCode)</span>
                    </div>
                    <div class="info-item">
                        <span class="info-label">Ville</span>
                        <span
                            class="info-value">@(string.IsNullOrEmpty(Model.City) ? "Non renseigné" : Model.City)</span>
                    </div>
                    <div class="info-item">
                        <span class="info-label">Pays</span>
                        <span
                            class="info-value">@(string.IsNullOrEmpty(Model.Country) ? "Non renseigné" : Model.Country)</span>
                    </div>
                </div>
            </div>
        </div>
    </section>
</main>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const tabs = document.querySelectorAll('.tab');

            tabs.forEach(tab => {
                tab.addEventListener('click', function () {
                    tabs.forEach(t => {
                        t.classList.remove('active');
                        t.setAttribute('aria-selected', 'false');
                    });
                    this.classList.add('active');
                    this.setAttribute('aria-selected', 'true');

                    document.querySelectorAll('.adverts-content').forEach(content => {
                        content.classList.remove('active');
                    });

                    const type = this.dataset.type;
                    if (type === 'all') {
                        document.getElementById('all-adverts').classList.add('active');
                    } else if (type === 'offers') {
                        document.getElementById('offers-adverts').classList.add('active');
                    } else if (type === 'requests') {
                        document.getElementById('requests-adverts').classList.add('active');
                    }
                });
            });
        });
    </script>
}
