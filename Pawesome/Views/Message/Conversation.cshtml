@model Pawesome.Models.ViewModels.Message.ConversationViewModel
@{
    ViewData["Title"] = "Conversation avec " + Model.OtherUserFullName;
}

<div class="container conversation-page" data-conversation-id="@Model.OtherUserId">
    <div class="conversation-container">
        <div class="conversation-header">
            <a href="@Url.Action("Index")" class="button" data-variant="ghost">
                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                    <path d="m15 18-6-6 6-6"/>
                </svg>
                Retour
            </a>

            <div class="user-info">
                @if (!string.IsNullOrEmpty(Model.OtherUserPhoto))
                {
                    <div class="avatar" data-size="md">
                        <img src="@Model.OtherUserPhoto" alt="@Model.OtherUserFullName" class="avatar-image">
                    </div>
                }
                else
                {
                    <div class="avatar" data-size="md">
                        <div class="avatar-fallback">
                            @Model.OtherUserFullName.Substring(0, 1).ToUpper()
                        </div>
                    </div>
                }
                <h2 class="user-name">@Model.OtherUserFullName</h2>
            </div>
        </div>

        <div id="messages-container" class="messages-container">
            @if (!Model.Messages.Any())
            {
                <div class="empty-conversation">
                    <p class="empty-title">Aucun message pour l'instant</p>
                    <p class="empty-subtitle">Envoyez un message pour commencer la conversation</p>
                </div>
            }
            else
            {
                @foreach (var message in Model.Messages)
                {
                    <div class="message-wrapper @(message.IsCurrentUserSender ? "message-outgoing" : "message-incoming")">
                        <div class="message">
                            <p class="message-content">@message.Content</p>
                            <p class="message-time">@message.FormattedDate</p>
                        </div>
                    </div>
                }
            }
        </div>

        <form id="message-form" method="post" action="@Url.Action("SendMessage")" class="message-form">
            <input type="hidden" name="ReceiverId" id="receiver-id" value="@Model.OtherUserId" />
            <div class="message-input-container">
                <input type="text" id="message-input" name="Content" placeholder="Ã‰crivez votre message..." required>
                <button type="submit" class="button" data-variant="icon">
                    <span id="sending-indicator" style="display: none;" class="spinner" role="status" aria-hidden="true"></span>
                    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                        <path d="m22 2-7 20-4-9-9-4 20-7z"/>
                        <path d="M22 2 11 13"/>
                    </svg>
                </button>
            </div>
        </form>
    </div>
</div>