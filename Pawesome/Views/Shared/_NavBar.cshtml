@{ var isAccueil = ViewData["Title"]?.ToString() == "Accueil"; }

<header class="@(isAccueil ? "accueil-navbar" : "")">
    <nav class="container @(User.Identity?.IsAuthenticated == true ? "mt-2 mb-2" : "")">
        <a class="logo-pawesome" asp-area="" asp-controller="Home" asp-action="Index">
            <svg xmlns="http://www.w3.org/2000/svg" width="28" height="28" viewBox="0 0 24 24" fill="none"
                 stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"
                 class="lucide lucide-paw-print-icon lucide-paw-print">
                <circle cx="11" cy="4" r="2"/>
                <circle cx="18" cy="8" r="2"/>
                <circle cx="20" cy="16" r="2"/>
                <path
                    d="M9 10a5 5 0 0 1 5 5v3.5a3.5 3.5 0 0 1-6.84 1.045Q6.52 17.48 4.46 16.84A3.5 3.5 0 0 1 5.5 10Z"/>
            </svg>
            <span class="pawesome">Pawesome</span>
        </a>
        <div>
            <ul>
                @if (User.Identity?.IsAuthenticated == true)
                {
                    <li>
                        <a class="advert-link" asp-area="" asp-controller="Advert" asp-action="CreateRequest">
                            <span>
                                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24"
                                     fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round"
                                     stroke-linejoin="round" class="lucide lucide-circle-plus-icon lucide-circle-plus">
                                    <circle
                                        cx="12" cy="12" r="10"/><path d="M8 12h8"/><path d="M12 8v8"/></svg></span>
                            <p class="mobile-hidden">Publier une annonce</p>
                        </a>
                    </li>
                    <li>
                        <a asp-area="" asp-controller="Advert" asp-action="Index">
                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"
                                 fill="none"
                                 stroke="currentColor" stroke-width="2" stroke-linecap="round"
                                 stroke-linejoin="round"
                                 class="lucide lucide-search-icon lucide-search search-button">
                                <path d="m21 21-4.34-4.34"/>
                                <circle cx="11" cy="11" r="8"/>
                            </svg>
                        </a>
                    </li>
                    <li class="notification-bell">
                        <label class="popup">
                            <input type="checkbox"/>
                            <div class="notification-icon-wrapper" tabindex="0">
                                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"
                                     fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round"
                                     stroke-linejoin="round" class="lucide lucide-bell-icon lucide-bell">
                                    <path d="M10.268 21a2 2 0 0 0 3.464 0"/>
                                    <path
                                        d="M3.262 15.326A1 1 0 0 0 4 17h16a1 1 0 0 0 .74-1.673C19.41 13.956 18 12.499 18 8A6 6 0 0 0 6 8c0 4.499-1.411 5.956-2.738 7.326"/>
                                </svg>
                                <span id="notification-badge" class="notification-badge hidden">0</span>
                            </div>
                            <nav class="popup-window notifications-popup">
                                <div class="notifications-header">
                                    <h3>Notifications</h3>
                                    <div>
                                        <button id="mark-all-read" class="button" data-variant="ghost"
                                                data-size="xs">
                                            Tout lire
                                        </button>
                                        <a href="/Notification" class="button" data-variant="ghost" data-size="xs">
                                            Tout voir
                                        </a>
                                    </div>
                                </div>
                                <div id="notifications-container" class="notifications-list-popup">
                                    <div class="loading-spinner">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24"
                                             viewBox="0 0 24 24"
                                             fill="none" stroke="currentColor" stroke-width="2"
                                             stroke-linecap="round"
                                             stroke-linejoin="round" class="lucide-refresh-cw animate-spin">
                                            <path d="M21 2v6h-6"></path>
                                            <path d="M3 12a9 9 0 0 1 15-6.7L21 8"></path>
                                            <path d="M3 22v-6h6"></path>
                                            <path d="M21 12a9 9 0 0 1-15 6.7L3 16"></path>
                                        </svg>
                                    </div>
                                </div>
                            </nav>
                        </label>
                    </li>
                    <li class="profile-dropdown">
                        <label class="popup">
                            <input type="checkbox"/>
                            <div tabindex="0">
                                @if (!string.IsNullOrEmpty(User.FindFirst("Photo")?.Value))
                                {
                                    var photoUrl = User.FindFirst("Photo")?.Value;
                                    <div class="avatar" data-size="md">
                                        <img class="avatar-image" src="@ImageHelper.GetPhotoUrl(photoUrl)"
                                             alt="Avatar de l'utilisateur"/>
                                    </div>
                                }
                                else
                                {
                                    <div class="avatar avatar-fallback" data-size="md">
                                        @User.FindFirst("FirstName")?.Value?.Substring(0, 1).ToUpper() @User.FindFirst("LastName")?.Value?.Substring(0, 1).ToUpper()
                                    </div>
                                }
                            </div>
                            <nav class="popup-window">
                                <ul>
                                    <li class="popup-header">
                                        <p>@User.FindFirst("FirstName")?.Value @User.FindFirst("LastName")?.Value</p>
                                        <p>@User.FindFirst("Email")?.Value</p>
                                    </li>
                                    <hr class="popup-divider"/>
                                    <li>
                                        <a asp-area="" asp-controller="User" asp-action="Index">
                                            <span>Mon profil</span>
                                            <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18"
                                                 viewBox="0 0 24 24" fill="none" stroke="currentColor"
                                                 stroke-width="2"
                                                 stroke-linecap="round" stroke-linejoin="round" class="menu-icon">
                                                <path d="M19 21v-2a4 4 0 0 0-4-4H9a4 4 0 0 0-4 4v2"/>
                                                <circle cx="12" cy="7" r="4"/>
                                            </svg>
                                        </a>
                                    </li>
                                    <li>
                                        <a asp-area="" asp-controller="Advert" asp-action="MyAdverts">
                                            <span>Mes annonces</span>
                                            <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18"
                                                 viewBox="0 0 24 24" fill="none" stroke="currentColor"
                                                 stroke-width="2"
                                                 stroke-linecap="round" stroke-linejoin="round"
                                                 class="lucide lucide-megaphone-icon lucide-megaphone menu-icon">
                                                <path d="m3 11 18-5v12L3 14v-3z"/>
                                                <path d="M11.6 16.8a3 3 0 1 1-5.8-1.6"/>
                                            </svg>
                                        </a>
                                    </li>
                                    <li>
                                        <a asp-area="" asp-controller="Message" asp-action="Index">
                                            <span>Messages</span>
                                            <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18"
                                                 viewBox="0 0 24 24" fill="none" stroke="currentColor"
                                                 stroke-width="2"
                                                 stroke-linecap="round" stroke-linejoin="round" class="menu-icon">
                                                <path d="M7.9 20A9 9 0 1 0 4 16.1L2 22Z"/>
                                            </svg>
                                        </a>
                                    </li>
                                    <li>
                                        <a asp-area="" asp-controller="Booking" asp-action="Index">
                                            <span>Réservations</span>
                                            <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18"
                                                 viewBox="0 0 24 24" fill="none" stroke="currentColor"
                                                 stroke-width="2"
                                                 stroke-linecap="round" stroke-linejoin="round"
                                                 class="menu-icon lucide lucide-calendar-check-icon lucide-calendar-check">
                                                <path d="M8 2v4"/>
                                                <path d="M16 2v4"/>
                                                <rect width="18" height="18" x="3" y="4" rx="2"/>
                                                <path d="M3 10h18"/>
                                                <path d="m9 16 2 2 4-4"/>
                                            </svg>
                                        </a>
                                    </li>
                                    <li>
                                        <a asp-area="" asp-controller="Payment" asp-action="History">
                                            <span>Historique des paiements</span>
                                            <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18"
                                                 viewBox="0 0 24 24" fill="none" stroke="currentColor"
                                                 stroke-width="2"
                                                 stroke-linecap="round" stroke-linejoin="round"
                                                 class="lucide menu-icon lucide-history">
                                                <path d="M3 12a9 9 0 1 0 9-9 9.75 9.75 0 0 0-6.74 2.74L3 8"/>
                                                <path d="M3 3v5h5"/>
                                                <path d="M12 7v5l4 2"/>
                                            </svg>
                                        </a>
                                    </li>
                                    <li>
                                        <a asp-area="" asp-controller="Balance" asp-action="Index">
                                            <span>Mon solde</span>
                                            <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18"
                                                 viewBox="0 0 24 24" fill="none" stroke="currentColor"
                                                 stroke-width="2"
                                                 stroke-linecap="round" stroke-linejoin="round"
                                                 class="lucide menu-icon lucide-badge-euro-icon lucide-badge-euro">
                                                <path
                                                    d="M3.85 8.62a4 4 0 0 1 4.78-4.77 4 4 0 0 1 6.74 0 4 4 0 0 1 4.78 4.78 4 4 0 0 1 0 6.74 4 4 0 0 1-4.77 4.78 4 4 0 0 1-6.75 0 4 4 0 0 1-4.78-4.77 4 4 0 0 1 0-6.76Z"/>
                                                <path d="M7 12h5"/>
                                                <path d="M15 9.4a4 4 0 1 0 0 5.2"/>
                                            </svg>
                                        </a>
                                    </li>
                                    @if (User.IsInRole("Admin"))
                                    {
                                        <li>
                                            <a asp-area="" asp-controller="Admin" asp-action="Index">
                                                <span>Administration</span>
                                                <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18"
                                                     viewBox="0 0 24 24" fill="none" stroke="currentColor"
                                                     stroke-width="2"
                                                     stroke-linecap="round" stroke-linejoin="round"
                                                     class="menu-icon lucide lucide-lock-icon lucide-lock">
                                                    <rect width="18" height="11" x="3" y="11" rx="2" ry="2"/>
                                                    <path d="M7 11V7a5 5 0 0 1 10 0v4"/>
                                                </svg>
                                            </a>
                                        </li>
                                    }
                                    <hr class="popup-divider"/>
                                    <li>
                                        <div>
                                            <span>Thème</span>
                                            <label onclick="event.stopPropagation()" class="theme-switch ml-2">
                                                <input id="theme-toggle" type="checkbox"
                                                       class="theme-switch-input"/>
                                                <span class="theme-switch-slider">
                                                    <span class="theme-switch-thumb">
                                                        <svg class="theme-switch-icon sun"
                                                             xmlns="http://www.w3.org/2000/svg" width="16" height="16"
                                                             viewBox="0 0 24 24" fill="none" stroke="currentColor"
                                                             stroke-width="2" stroke-linecap="round"
                                                             stroke-linejoin="round"><circle cx="12" cy="12" r="4"/>
                                                            <path
                                                                d="M12 2v2"/><path d="M12 20v2"/>
                                                            <path
                                                                d="m4.93 4.93 1.41 1.41"/><path d="m17.66 17.66 1.41 1.41"/>
                                                            <path
                                                                d="M2 12h2"/><path d="M20 12h2"/>
                                                            <path
                                                                d="m6.34 17.66-1.41 1.41"/><path d="m19.07 4.93-1.41 1.41"/></svg>
                                                        <svg class="theme-switch-icon moon"
                                                             xmlns="http://www.w3.org/2000/svg" width="16" height="16"
                                                             viewBox="0 0 24 24" fill="none" stroke="currentColor"
                                                             stroke-width="2" stroke-linecap="round"
                                                             stroke-linejoin="round">
                                                            <path
                                                                d="M12 3a6 6 0 0 0 9 9 9 9 0 1 1-9-9Z"/></svg>
                                                    </span>
                                                </span>
                                            </label>
                                        </div>
                                    </li>
                                    <hr class="popup-divider"/>
                                    <li>
                                        <a asp-area="" asp-controller="Auth" asp-action="Logout">
                                            <span>Déconnexion</span>
                                            <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18"
                                                 viewBox="0 0 24 24" fill="none" stroke="currentColor"
                                                 stroke-width="2"
                                                 stroke-linecap="round" stroke-linejoin="round" class="menu-icon">
                                                <path d="M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4"/>
                                                <polyline points="16 17 21 12 16 7"/>
                                                <line x1="21" x2="9" y1="12" y2="12"/>
                                            </svg>
                                        </a>
                                    </li>
                                </ul>
                            </nav>
                        </label>
                    </li>
                }
                else
                {
                    <nav>
                        <ul class="unlogged-links">
                            <li>
                                <a class="button" data-variant="secondary" asp-area="" asp-controller="Auth"
                                   asp-action="Login">Se connecter</a>
                            </li>
                            <li>
                                <a class="button" asp-area="" asp-controller="Auth"
                                   asp-action="Register">S'inscrire</a>
                            </li>
                        </ul>
                    </nav>
                }
            </ul>
        </div>
    </nav>
</header>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            updateNotificationCount();

            const notificationCheckbox = document.querySelector('.notification-bell .popup input');
            if (notificationCheckbox) {
                notificationCheckbox.addEventListener('change', function () {
                    if (this.checked) {
                        loadNotifications();
                    }
                });
            }
        });

        function updateNotificationCount() {
            fetch('/Notification/GetUnreadCount')
                .then(response => response.json())
                .then(data => {
                    const badge = document.getElementById('notification-badge');
                    if (badge) {
                        if (data.count > 0) {
                            badge.innerText = data.count;
                            badge.classList.remove('hidden');
                        } else {
                            badge.classList.add('hidden');
                        }
                    }
                })
                .catch(err => console.error("Erreur lors de la récupération du nombre de notifications :", err));
        }

        function loadNotifications() {
            const container = document.getElementById('notifications-container');
            container.innerHTML = `
            <div class="loading-spinner">
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide-refresh-cw animate-spin">
                    <path d="M21 2v6h-6"></path>
                    <path d="M3 12a9 9 0 0 1 15-6.7L21 8"></path>
                    <path d="M3 22v-6h6"></path>
                    <path d="M21 12a9 9 0 0 1-15 6.7L3 16"></path>
                </svg>
            </div>
        `;

            fetch('/Notification/GetNotifications')
                .then(response => response.json())
                .then(notifications => {
                    renderNotifications(notifications);
                    setupNotificationEventListeners();
                })
                .catch(err => {
                    console.error("Erreur lors du chargement des notifications :", err);
                    container.innerHTML = '<p class="error-message">Impossible de charger les notifications</p>';
                });
        }

        function renderNotifications(notifications) {
            const container = document.getElementById('notifications-container');

            if (notifications.length === 0) {
                container.innerHTML = `
                <div class="empty-notifications">
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none"
                         stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"
                         class="lucide lucide-bell">
                        <path d="M6 8a6 6 0 0 1 12 0c0 7 3 9 3 9H3s3-2 3-9"/>
                        <path d="M10.3 21a1.94 1.94 0 0 0 3.4 0"/>
                    </svg>
                    <p>Aucune notification</p>
                </div>
            `;
                return;
            }

            let html = '';
            notifications.slice(0, 5).forEach(notif => {
                let icon = '';

                if (notif.type === "Message") {
                    icon = `<svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide-message-square">
                            <path d="M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z"/>
                        </svg>`;
                } else if (notif.type === "Booking") {
                    icon = `<svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide-calendar">
                            <rect width="18" height="18" x="3" y="4" rx="2" ry="2"/>
                            <line x1="16" x2="16" y1="2" y2="6"/>
                            <line x1="8" x2="8" y1="2" y2="6"/>
                            <line x1="3" x2="21" y1="10" y2="10"/>
                        </svg>`;
                } else if (notif.type === "Review") {
                    icon = `<svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide-star">
                            <polygon points="12 2 15.09 8.26 22 9.27 17 14.14 18.18 21.02 12 17.77 5.82 21.02 7 14.14 2 9.27 8.91 8.26 12 2"/>
                        </svg>`;
                } else {
                    icon = `<svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide-bell">
                            <path d="M6 8a6 6 0 0 1 12 0c0 7 3 9 3 9H3s3-2 3-9"/>
                            <path d="M10.3 21a1.94 1.94 0 0 0 3.4 0"/>
                        </svg>`;
                }

                html += `
                <div class="notification-item-popup ${notif.isRead ? "read" : "unread"}" data-id="${notif.id}">
                    <div class="notification-icon">${icon}</div>
                    <div class="notification-content">
                        <div class="notification-header">
                            <h4 class="notification-title">${notif.title}</h4>
                            <span class="notification-time">${new Date(notif.createdAt).toLocaleString('fr-FR', {
                    day: '2-digit',
                    month: '2-digit',
                    hour: '2-digit',
                    minute: '2-digit'
                })}</span>
                        </div>
                        <p class="notification-message">${notif.message}</p>
                        ${notif.linkUrl ? `<a href="${notif.linkUrl}" class="notification-link">Voir</a>` : ''}
                    </div>
                    <div class="notification-actions">
                        ${!notif.isRead ? `
                            <button class="button mark-read-btn" data-id="${notif.id}" title="Marquer comme lu">
                                <svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide-check">
                                    <polyline points="20 6 9 17 4 12"/>
                                </svg>
                            </button>
                        ` : ''}
                        <button class="button delete-notification-btn" data-id="${notif.id}" title="Supprimer">
                            <svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide-x">
                                <path d="M18 6 6 18"/>
                                <path d="m6 6 12 12"/>
                            </svg>
                        </button>
                    </div>
                </div>
            `;
            });

            if (notifications.length > 5) {
                html += `
                <div class="view-all-notifications">
                    <a href="/Notification">Voir toutes les notifications (${notifications.length})</a>
                </div>
            `;
            }

            container.innerHTML = html;
        }

        function setupNotificationEventListeners() {
            document.querySelectorAll('.mark-read-btn').forEach(btn => {
                btn.addEventListener('click', async (e) => {
                    e.stopPropagation();
                    const id = btn.dataset.id;
                    try {
                        const response = await fetch(`/Notification/MarkAsRead/${id}`, {
                            method: 'POST',
                            headers: {'Content-Type': 'application/json'}
                        });

                        if (response.ok) {
                            const item = document.querySelector(`.notification-item-popup[data-id="${id}"]`);
                            item.classList.remove('unread');
                            item.classList.add('read');
                            btn.remove();
                            updateNotificationCount();
                        }
                    } catch (error) {
                        console.error("Erreur lors du marquage comme lu :", error);
                    }
                });
            });

            document.querySelectorAll('.delete-notification-btn').forEach(btn => {
                btn.addEventListener('click', async (e) => {
                    e.stopPropagation();
                    const id = btn.dataset.id;
                    try {
                        const response = await fetch(`/Notification/Delete/${id}`, {
                            method: 'POST',
                            headers: {'Content-Type': 'application/json'}
                        });

                        if (response.ok) {
                            const item = document.querySelector(`.notification-item-popup[data-id="${id}"]`);
                            item.remove();

                            if (document.querySelectorAll('.notification-item-popup').length === 0) {
                                document.getElementById('notifications-container').innerHTML = `
                                <div class="empty-notifications">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 24 24" fill="none"
                                         stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"
                                         class="lucide lucide-bell">
                                        <path d="M6 8a6 6 0 0 1 12 0c0 7 3 9 3 9H3s3-2 3-9"/>
                                        <path d="M10.3 21a1.94 1.94 0 0 0 3.4 0"/>
                                    </svg>
                                    <p>Aucune notification</p>
                                </div>
                            `;
                            }
                            updateNotificationCount();
                        }
                    } catch (error) {
                        console.error("Erreur lors de la suppression :", error);
                    }
                });
            });

            document.getElementById('mark-all-read')?.addEventListener('click', async (e) => {
                e.stopPropagation();
                try {
                    const response = await fetch('/Notification/MarkAllAsRead', {
                        method: 'POST',
                        headers: {'Content-Type': 'application/json'}
                    });

                    if (response.ok) {
                        document.querySelectorAll('.notification-item-popup.unread').forEach(item => {
                            item.classList.remove('unread');
                            item.classList.add('read');
                            item.querySelector('.mark-read-btn')?.remove();
                        });
                        updateNotificationCount();
                    }
                } catch (error) {
                    console.error("Erreur lors du marquage de toutes les notifications comme lues :", error);
                }
            });
        }
    </script>
