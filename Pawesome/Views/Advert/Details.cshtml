@model Pawesome.Models.Dtos.Advert.PetSittingAdvertDto

<main role="main" class="container advert-details">
    <div class="advert-header">
        <div class="advert-title-status">
            <h1>@(Model.IsPetSitter ? "Offre de pet sitting" : "Recherche d'un pet sitter")</h1>
            <span class="badge" 
                  data-variant="@(Model.Status == "pending" ? "warning" : (Model.Status == "accepted" ? "success" : (Model.Status == "completed" ? "info" : "error")))">
                @(Model.Status == "pending" ? "En attente" : (Model.Status == "accepted" ? "Acceptée" : (Model.Status == "completed" ? "Terminée" : "Annulée")))
            </span>
        </div>
        <div class="advert-dates-price">
            <div class="advert-date">
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-calendar-days">
                    <rect width="18" height="18" x="3" y="4" rx="2" ry="2"/>
                    <line x1="16" x2="16" y1="2" y2="6"/>
                    <line x1="8" x2="8" y1="2" y2="6"/>
                    <line x1="3" x2="21" y1="10" y2="10"/>
                    <path d="M8 14h.01"/>
                    <path d="M12 14h.01"/>
                    <path d="M16 14h.01"/>
                    <path d="M8 18h.01"/>
                    <path d="M12 18h.01"/>
                    <path d="M16 18h.01"/>
                </svg>
                <span>Du @Model.StartDate.ToString("dd/MM/yyyy") au @Model.EndDate.ToString("dd/MM/yyyy")</span>
            </div>
            <div class="advert-price">
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-euro">
                    <path d="M4 10h12"/>
                    <path d="M4 14h9"/>
                    <path d="M19 6a7.7 7.7 0 0 0-5.2-2A7.9 7.9 0 0 0 6 12c0 4.4 3.5 8 7.8 8 2 0 3.8-.8 5.2-2"/>
                </svg>
                <span>@Model.Amount.ToString("C")</span>
            </div>
        </div>
    </div>

    <div class="advert-sections">
        <section class="advert-section owner-section">
            <h2 class="section-title">
                @(Model.IsPetSitter ? "Pet sitter" : "Propriétaire des animaux")
            </h2>
            @if (Model.Owner != null)
            {
                <div class="owner-card">
                    <div class="owner-avatar">
                        @if (!string.IsNullOrEmpty(Model.Owner.Photo))
                        {
                            <img src="/images/users/@Model.Owner.Photo" alt="Photo de @Model.Owner.FullName" />
                        }
                        else
                        {
                            <div class="avatar avatar-fallback" data-size="lg">
                                @Model.Owner.FullName.Split(' ')[0].Substring(0, 1).ToUpper()
                                @(Model.Owner.FullName.Split(' ').Length > 1 ? Model.Owner.FullName.Split(' ')[1].Substring(0, 1).ToUpper() : "")
                            </div>
                        }
                    </div>
                    <div class="owner-info">
                        <h3>@Model.Owner.FullName</h3>
                        @if (Model.Owner.Rating.HasValue)
                        {
                            <p class="star-rating">@Html.DisplayStars(Model.Owner.Rating)</p>
                        }
                        @if (!string.IsNullOrEmpty(Model.Owner.City) || !string.IsNullOrEmpty(Model.Owner.Country))
                        {
                            <p class="owner-location">
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-map-pin">
                                    <path d="M20 10c0 6-8 12-8 12s-8-6-8-12a8 8 0 0 1 16 0Z"/>
                                    <circle cx="12" cy="10" r="3"/>
                                </svg>
                                @(!string.IsNullOrEmpty(Model.Owner.City) ? Model.Owner.City : "")
                                @(!string.IsNullOrEmpty(Model.Owner.City) && !string.IsNullOrEmpty(Model.Owner.Country) ? ", " : "")
                                @(!string.IsNullOrEmpty(Model.Owner.Country) ? Model.Owner.Country : "")
                            </p>
                        }
                        <a asp-controller="User" asp-action="Profile" asp-route-id="@Model.Owner.Id" class="button" data-variant="outline" data-size="sm">
                            Voir le profil
                        </a>
                    </div>
                </div>
            }
            else
            {
                <p>Information sur le propriétaire non disponible</p>
            }
        </section>

        @if (Model.Pets != null && Model.Pets.Any())
        {
            <section class="advert-section pets-section">
                <h2 class="section-title">
                    @(Model.IsPetSitter ? "Peut s'occuper de" : "Animaux concernés")
                </h2>
                <div class="pets-grid">
                    @foreach (var pet in Model.Pets)
                    {
                        <div class="pet-card">
                            <div class="pet-image">
                                <img src="@(string.IsNullOrEmpty(pet.Photo) ? "/images/default-pet.jpg" : "/images/pets/" + pet.Photo)" alt="@pet.Name" />
                            </div>
                            <div class="pet-info">
                                <div class="pet-header">
                                    <h3 class="pet-name">@pet.Name</h3>
                                </div>
                                <p class="badge" data-variant="@pet.Species">@pet.Species</p>
                            </div>
                        </div>
                    }
                </div>
            </section>
        }

        @if (!string.IsNullOrEmpty(Model.AdditionalInformation))
        {
            <section class="advert-section description-section">
                <h2 class="section-title">Informations supplémentaires</h2>
                <div class="advert-description">
                    @Model.AdditionalInformation
                </div>
            </section>
        }
    </div>

    <div class="advert-actions">
        <div class="advert-created-at">
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-clock">
                <circle cx="12" cy="12" r="10"/>
                <polyline points="12 6 12 12 16 14"/>
            </svg>
            <span>Publiée le @Model.CreatedAt.ToString("dd/MM/yyyy")</span>
        </div>
        <div class="action-buttons">
            @{
                bool isOwner = false;
                if (Model.Owner != null && User.Identity != null && User.Identity.IsAuthenticated)
                {
                    var userIdClaim = User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier);
                    var currentUserId = userIdClaim != null && int.TryParse(userIdClaim.Value, out int uid) ? uid : 0;
                    isOwner = currentUserId == Model.Owner.Id;
                }
            }
            @if (User.Identity?.IsAuthenticated == true && Model.Status != "cancelled" && Model.Status != "completed")
            {
                @if (Model.Owner != null && Model.Owner.Id != int.Parse(User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value ?? "0"))
                {
                    <div class="mt-4">
                        <a asp-controller="Payment" asp-action="Checkout" asp-route-advertId="@Model.Id" 
                           class="btn btn-primary btn-lg w-100">
                            <i class="bi bi-credit-card me-2"></i> Réserver maintenant
                        </a>
                    </div>
                }
            }
            @if (isOwner)
            {
                <div class="owner-actions">
                    @if (Model.IsPetSitter)
                    {
                        <a asp-controller="Advert" asp-action="EditOffer" asp-route-id="@Model.Id" class="button" data-variant="secondary">
                            Modifier l'annonce
                        </a>
                    }
                    else
                    {
                        <a asp-controller="Advert" asp-action="EditRequest" asp-route-id="@Model.Id" class="button" data-variant="secondary">
                            Modifier l'annonce
                        </a>
                    }

                    @if (Model.Status != "cancelled")
                    {
                        <a asp-controller="Advert" asp-action="ConfirmStatusChange" asp-route-id="@Model.Id" asp-route-status="cancelled" class="button" data-variant="error">
                            Annuler l'annonce
                        </a>
                    }
                </div>
            }
            else if (Model.Owner != null)
            {
                <a asp-controller="Message" asp-action="StartConversation" asp-route-otherUserId="@Model.Owner.Id" class="button" data-variant="primary">
                    Contacter
                </a>
            }

            <a asp-controller="Advert" asp-action="Index" class="button" data-variant="secondary" data-size="sm">
                Retour aux annonces
            </a>
        </div>
    </div>
</main>
