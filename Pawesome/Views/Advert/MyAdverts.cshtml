@using Pawesome.Models.Enums
@model List<Pawesome.Models.Dtos.Advert.PetSittingAdvertDto>

@{
    ViewData["Title"] = "Mes Annonces";

    string GetStatusVariant(AdvertStatus status) => status switch
    {
        AdvertStatus.Pending => "info",
        AdvertStatus.PendingOffer => "purple",
        AdvertStatus.Active => "success",
        AdvertStatus.Cancelled => "error",
        AdvertStatus.Expired => "warning",
        AdvertStatus.Archived => "secondary",
        AdvertStatus.FullyBooked => "lime",
        _ => "secondary"
    };

    string GetStatusText(AdvertStatus status) => status switch
    {
        AdvertStatus.Pending => "En attente",
        AdvertStatus.PendingOffer => "Offre en attente",
        AdvertStatus.Active => "Active",
        AdvertStatus.Cancelled => "Annulée",
        AdvertStatus.Expired => "Expirée",
        AdvertStatus.Archived => "Archivée",
        AdvertStatus.FullyBooked => "Complétée",
        _ => status.ToString()
    };
}

<main role="main" class="container index-container">
    <div class="index-header">
        <h1 class="section-title">Mes annonces</h1>
        <div class="create-buttons">
            <a asp-action="CreateRequest" class="button" data-variant="secondary" data-size="md">
                <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none"
                     stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"
                     class="lucide lucide-search" style="margin-right: var(--space-2);">
                    <circle cx="11" cy="11" r="8"/>
                    <path d="m21 21-4.3-4.3"/>
                </svg>
                Demander un pet sitter
            </a>
            <a asp-action="CreateOffer" class="button" data-variant="primary" data-size="md">
                <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none"
                     stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"
                     class="lucide lucide-plus" style="margin-right: var(--space-2);">
                    <path d="M12 5v14"/>
                    <path d="M5 12h14"/>
                </svg>
                Proposer mes services
            </a>
        </div>
    </div>

    <div class="tabs-container">
        <div class="tabs-list" role="tablist">
            <button class="tab active" role="tab" aria-selected="true" data-type="all">Toutes mes annonces</button>
            <button class="tab" role="tab" aria-selected="false" data-type="offers">Mes offres</button>
            <button class="tab" role="tab" aria-selected="false" data-type="requests">Mes demandes</button>
        </div>
    </div>

    @if (!Model.Any())
    {
        <div class="empty-state">
            <svg xmlns="http://www.w3.org/2000/svg" width="48" height="48" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-clipboard-list">
                <rect width="8" height="4" x="8" y="2" rx="1" ry="1"/>
                <path d="M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2"/>
                <path d="M12 11h4"/>
                <path d="M12 16h4"/>
                <path d="M8 11h.01"/>
                <path d="M8 16h.01"/>
            </svg>
            <h3>Vous n'avez pas encore d'annonces</h3>
            <p>Créez votre première annonce pour proposer ou rechercher des services de pet sitting.</p>
            <div class="advert-actions-center">
                <a asp-action="CreateRequest" class="button" data-variant="primary" data-size="md">Chercher un pet sitter</a>
                <a asp-action="CreateOffer" class="button" data-variant="secondary" data-size="md">Proposer mes services</a>
            </div>
        </div>
    }
    else
    {
        <div id="all-adverts" class="adverts-content active">
            <div class="my-adverts-adverts-grid">
                @foreach (var advert in Model)
                {
                    <article class="my-adverts-adverts-card">
                        <div class="card-header">
                            <span class="advert-badge @(advert.IsPetSitter ? "offer" : "request")">
                                @(advert.IsPetSitter ? "Offre" : "Demande")
                            </span>
                            <span class="badge"
                                  data-variant="@GetStatusVariant(advert.Status)">@GetStatusText(advert.Status)</span>
                            <span class="advert-price">@advert.Amount.ToString("C")</span>
                        </div>
                        <div class="card-body">
                            @if (!string.IsNullOrEmpty(advert.City))
                            {
                                <h3 class="advert-title">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18"
                                         viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"
                                         stroke-linecap="round" stroke-linejoin="round"
                                         class="lucide lucide-map-pin">
                                        <path d="M20 10c0 6-8 12-8 12s-8-6-8-12a8 8 0 0 1 16 0Z"/>
                                        <circle cx="12" cy="10" r="3"/>
                                    </svg>
                                    @advert.City
                                </h3>
                            }
                            <p class="my-adverts-advert-info">
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24"
                                     fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round"
                                     stroke-linejoin="round" class="lucide lucide-calendar">
                                    <rect width="18" height="18" x="3" y="4" rx="2"/>
                                    <line x1="16" x2="16" y1="2" y2="6"/>
                                    <line x1="8" x2="8" y1="2" y2="6"/>
                                    <line x1="3" x2="21" y1="10" y2="10"/>
                                </svg>
                                Du @advert.StartDate.ToString("dd/MM/yyyy") au @advert.EndDate.ToString("dd/MM/yyyy")
                            </p>

                            @if (advert.Pets.Any())
                            {
                                <div>
                                    <p class="form-label">Animaux :</p>
                                    <div class="pets-tags">
                                        @foreach (var pet in advert.Pets)
                                        {
                                            <span class="badge" data-variant="@pet.AnimalTypeName">
                                                @pet.AnimalTypeName
                                            </span>
                                        }
                                    </div>
                                </div>
                            }

                            @if (!string.IsNullOrEmpty(advert.AdditionalInformation))
                            {
                                <p class="description-text">
                                    @(advert.AdditionalInformation.Length > 100 ? advert.AdditionalInformation.Substring(0, 100) + "..." : advert.AdditionalInformation)
                                </p>
                            }

                            <div class="mt-3">
                                <a asp-action="Details" asp-route-id="@advert.Id" class="button"
                                   data-variant="outline" data-size="sm">Voir les détails</a>
                            </div>
                        </div>
                        <div class="card-footer">
                            <svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 24 24"
                                 fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round"
                                 stroke-linejoin="round" class="lucide lucide-clock"
                                 style="margin-right: var(--space-1);">
                                <circle cx="12" cy="12" r="10"/>
                                <polyline points="12 6 12 12 16 14"/>
                            </svg>
                            <span>
                                Publié le @advert.CreatedAt.ToString("dd/MM/yyyy")
                            </span>
                        </div>
                    </article>
                }
            </div>
        </div>
        
        <div id="offers-adverts" class="adverts-content">
            <div class="my-adverts-adverts-grid">
                @foreach (var advert in Model.Where(a => a.IsPetSitter))
                {
                    <article class="my-adverts-adverts-card">
                        <div class="card-header">
                            <span class="advert-badge offer">Offre</span>
                            <span class="badge"
                                  data-variant="@GetStatusVariant(advert.Status)">@GetStatusText(advert.Status)</span>
                            <span class="advert-price">@advert.Amount.ToString("C")</span>
                        </div>
                        <div class="card-body">
                            @if (!string.IsNullOrEmpty(advert.City))
                            {
                                <h3 class="advert-title">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18"
                                         viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"
                                         stroke-linecap="round" stroke-linejoin="round"
                                         class="lucide lucide-map-pin">
                                        <path d="M20 10c0 6-8 12-8 12s-8-6-8-12a8 8 0 0 1 16 0Z"/>
                                        <circle cx="12" cy="10" r="3"/>
                                    </svg>
                                    @advert.City
                                </h3>
                            }
                            <p class="my-adverts-advert-info">
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24"
                                     fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round"
                                     stroke-linejoin="round" class="lucide lucide-calendar">
                                    <rect width="18" height="18" x="3" y="4" rx="2"/>
                                    <line x1="16" x2="16" y1="2" y2="6"/>
                                    <line x1="8" x2="8" y1="2" y2="6"/>
                                    <line x1="3" x2="21" y1="10" y2="10"/>
                                </svg>
                                Du @advert.StartDate.ToString("dd/MM/yyyy") au @advert.EndDate.ToString("dd/MM/yyyy")
                            </p>

                            @if (advert.Pets.Any())
                            {
                                <div>
                                    <p class="form-label">Animaux :</p>
                                    <div class="pets-tags">
                                        @foreach (var pet in advert.Pets)
                                        {
                                            <span class="badge" data-variant="@pet.AnimalTypeName">
                                                @pet.AnimalTypeName
                                            </span>
                                        }
                                    </div>
                                </div>
                            }

                            @if (!string.IsNullOrEmpty(advert.AdditionalInformation))
                            {
                                <p class="description-text">
                                    @(advert.AdditionalInformation.Length > 100 ? advert.AdditionalInformation.Substring(0, 100) + "..." : advert.AdditionalInformation)
                                </p>
                            }

                            <div class="mt-3">
                                <a asp-action="Details" asp-route-id="@advert.Id" class="button"
                                   data-variant="outline" data-size="sm">Voir les détails</a>
                            </div>
                        </div>
                        <div class="card-footer">
                            <svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 24 24"
                                 fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round"
                                 stroke-linejoin="round" class="lucide lucide-clock"
                                 style="margin-right: var(--space-1);">
                                <circle cx="12" cy="12" r="10"/>
                                <polyline points="12 6 12 12 16 14"/>
                            </svg>
                            <span>
                                Publié le @advert.CreatedAt.ToString("dd/MM/yyyy")
                            </span>
                        </div>
                    </article>
                }
                @if (!Model.Any(a => a.IsPetSitter))
                {
                    <div class="empty-state" style="grid-column: 1 / -1;">
                        <svg xmlns="http://www.w3.org/2000/svg" width="48" height="48" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-clipboard-list">
                            <rect width="8" height="4" x="8" y="2" rx="1" ry="1"/>
                            <path d="M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2"/>
                            <path d="M12 11h4"/>
                            <path d="M12 16h4"/>
                            <path d="M8 11h.01"/>
                            <path d="M8 16h.01"/>
                        </svg>
                        <h3>Vous n'avez pas encore d'offres de services</h3>
                        <p>Créez votre première offre pour proposer vos services de pet sitting.</p>
                        <div class="advert-actions-center">
                            <a asp-action="CreateOffer" class="button" data-variant="primary" data-size="md">Proposer mes services</a>
                        </div>
                    </div>
                }
            </div>
        </div>
        
        <div id="requests-adverts" class="adverts-content">
            <div class="my-adverts-adverts-grid">
                @foreach (var advert in Model.Where(a => !a.IsPetSitter))
                {
                    <article class="advert-card">
                        <div class="card-header">
                            <span class="advert-badge request">Demande</span>
                            <span class="badge"
                                  data-variant="@GetStatusVariant(advert.Status)">@GetStatusText(advert.Status)</span>
                            <span class="advert-price">@advert.Amount.ToString("C")</span>
                        </div>
                        <div class="card-body">
                            @if (!string.IsNullOrEmpty(advert.City))
                            {
                                <h3 class="advert-title">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18"
                                         viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"
                                         stroke-linecap="round" stroke-linejoin="round"
                                         class="lucide lucide-map-pin">
                                        <path d="M20 10c0 6-8 12-8 12s-8-6-8-12a8 8 0 0 1 16 0Z"/>
                                        <circle cx="12" cy="10" r="3"/>
                                    </svg>
                                    @advert.City
                                </h3>
                            }
                            <p class="my-adverts-advert-info">
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24"
                                     fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round"
                                     stroke-linejoin="round" class="lucide lucide-calendar">
                                    <rect width="18" height="18" x="3" y="4" rx="2"/>
                                    <line x1="16" x2="16" y1="2" y2="6"/>
                                    <line x1="8" x2="8" y1="2" y2="6"/>
                                    <line x1="3" x2="21" y1="10" y2="10"/>
                                </svg>
                                Du @advert.StartDate.ToString("dd/MM/yyyy") au @advert.EndDate.ToString("dd/MM/yyyy")
                            </p>

                            @if (advert.Pets.Any())
                            {
                                <div>
                                    <p class="form-label">Animaux :</p>
                                    <div class="pets-tags">
                                        @foreach (var pet in advert.Pets)
                                        {
                                            <span class="badge" data-variant="@pet.AnimalTypeName">
                                                @pet.AnimalTypeName
                                            </span>
                                        }
                                    </div>
                                </div>
                            }

                            @if (!string.IsNullOrEmpty(advert.AdditionalInformation))
                            {
                                <p class="description-text">
                                    @(advert.AdditionalInformation.Length > 100 ? advert.AdditionalInformation.Substring(0, 100) + "..." : advert.AdditionalInformation)
                                </p>
                            }

                            <div class="mt-3">
                                <a asp-action="Details" asp-route-id="@advert.Id" class="button"
                                   data-variant="outline" data-size="sm">Voir les détails</a>
                            </div>
                        </div>
                        <div class="card-footer">
                            <svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 24 24"
                                 fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round"
                                 stroke-linejoin="round" class="lucide lucide-clock"
                                 style="margin-right: var(--space-1);">
                                <circle cx="12" cy="12" r="10"/>
                                <polyline points="12 6 12 12 16 14"/>
                            </svg>
                            <span>
                                Publié le @advert.CreatedAt.ToString("dd/MM/yyyy")
                            </span>
                        </div>
                    </article>
                }
                @if (!Model.Any(a => !a.IsPetSitter))
                {
                    <div class="empty-state" style="grid-column: 1 / -1;">
                        <svg xmlns="http://www.w3.org/2000/svg" width="48" height="48" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-clipboard-list">
                            <rect width="8" height="4" x="8" y="2" rx="1" ry="1"/>
                            <path d="M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2"/>
                            <path d="M12 11h4"/>
                            <path d="M12 16h4"/>
                            <path d="M8 11h.01"/>
                            <path d="M8 16h.01"/>
                        </svg>
                        <h3>Vous n'avez pas encore de demandes de pet sitting</h3>
                        <p>Créez votre première demande pour rechercher un pet sitter.</p>
                        <div class="advert-actions-center">
                            <a asp-action="CreateRequest" class="button" data-variant="primary" data-size="md">Demander un pet sitter</a>
                        </div>
                    </div>
                }
            </div>
        </div>
    }
</main>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const tabs = document.querySelectorAll('.tab');
        
        tabs.forEach(tab => {
            tab.addEventListener('click', function() {
                tabs.forEach(t => {
                    t.classList.remove('active');
                    t.setAttribute('aria-selected', 'false');
                });
                this.classList.add('active');
                this.setAttribute('aria-selected', 'true');
                
                document.querySelectorAll('.adverts-content').forEach(content => {
                    content.classList.remove('active');
                });
                
                const type = this.dataset.type;
                if (type === 'all') {
                    document.getElementById('all-adverts').classList.add('active');
                } else if (type === 'offers') {
                    document.getElementById('offers-adverts').classList.add('active');
                } else if (type === 'requests') {
                    document.getElementById('requests-adverts').classList.add('active');
                }
            });
        });
    });
</script>
