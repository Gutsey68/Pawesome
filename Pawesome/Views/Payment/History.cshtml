@using Pawesome.Helpers
@model IEnumerable<Pawesome.Models.ViewModels.Payment.PaymentHistoryViewModel>

@{
    ViewData["Title"] = "Historique de vos paiements";
}

<main role="main" class="history-container">
    <div class="header-section">
        <div>
            <h1 class="section-title">Historique de vos paiements</h1>
            <p class="history-subtitle">Retrouvez l'ensemble de vos transactions et réservations</p>
        </div>
        <a asp-controller="Balance" asp-action="Index" class="button" data-variant="primary" data-size="md">
            <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-wallet mr-2">
                <path d="M21 12V7H5a2 2 0 0 1 0-4h14v4"/>
                <path d="M3 5v14a2 2 0 0 0 2 2h16v-5"/>
                <path d="M18 12a2 2 0 0 0 0 4h4v-4Z"/>
            </svg>
            Voir mon solde
        </a>
    </div>
    
    <div class="history-card">
        @if (Model.Any())
        {
            <div class="payments-list">
                @foreach (var payment in Model)
                {
                    <article class="payment-item">
                        <div class="payment-header">
                            <div class="payment-title">
                                <h3>@(payment.IsPetSitter ? "Offre de pet-sitting" : "Réservation de pet-sitting")</h3>
                                <span class="payment-date">@payment.CreatedAt.ToString("dd/MM/yyyy HH:mm")</span>
                            </div>
                            <span class="badge" data-variant="@GetStatusVariant(payment.Status)">
                                @GetStatusText(payment.Status)
                            </span>
                        </div>
                        <div class="payment-content">
                            <div class="payment-details">
                                <div class="detail-group">
                                    <div class="label">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-tag">
                                            <path d="M12 2H2v10l9.29 9.29c.94.94 2.48.94 3.42 0l6.58-6.58c.94-.94.94-2.48 0-3.42L12 2Z"/>
                                            <path d="M7 7h.01"/>
                                        </svg>
                                        Annonce ID
                                    </div>
                                    <div class="value">
                                        <a asp-controller="Advert" asp-action="Details" asp-route-id="@payment.AdvertId">
                                            #@payment.AdvertId
                                        </a>
                                    </div>
                                </div>
                                <div class="detail-group">
                                    <div class="label">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-calendar">
                                            <rect width="18" height="18" x="3" y="4" rx="2" ry="2"/>
                                            <line x1="16" x2="16" y1="2" y2="6"/>
                                            <line x1="8" x2="8" y1="2" y2="6"/>
                                            <line x1="3" x2="21" y1="10" y2="10"/>
                                        </svg>
                                        Période
                                    </div>
                                    <div class="value">@payment.StartDate.ToString("dd/MM/yyyy") - @payment.EndDate.ToString("dd/MM/yyyy")</div>
                                </div>
                            </div>
                            <div class="payment-details">
                                <div class="detail-group">
                                    <div class="label">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-receipt">
                                            <path d="M4 2v20l2-1 2 1 2-1 2 1 2-1 2 1 2-1 2 1V2l-2 1-2-1-2 1-2-1-2 1-2-1-2 1-2-1Z"/>
                                            <path d="M16 8h-6a2 2 0 1 0 0 4h4a2 2 0 1 1 0 4H8"/>
                                            <path d="M12 17.5v-11"/>
                                        </svg>
                                        Montant
                                    </div>
                                    <div class="value price">@payment.Amount.ToString("C")</div>
                                </div>
                                @if (!string.IsNullOrEmpty(payment.SessionId))
                                {
                                    <div class="detail-group payment-reference">
                                        <div class="label">
                                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-hash">
                                                <line x1="4" x2="20" y1="9" y2="9"/>
                                                <line x1="4" x2="20" y1="15" y2="15"/>
                                                <line x1="10" x2="8" y1="3" y2="21"/>
                                                <line x1="16" x2="14" y1="3" y2="21"/>
                                            </svg>
                                            Référence de paiement
                                        </div>
                                        <div class="value reference">@payment.SessionId</div>
                                    </div>
                                }
                            </div>
                            <div class="payment-actions">
                                <a asp-controller="Advert" asp-action="Details" asp-route-id="@payment.AdvertId" class="button" data-variant="outline" data-size="sm">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-eye">
                                        <path d="M2 12s3-7 10-7 10 7 10 7-3 7-10 7-10-7-10-7Z"/>
                                        <circle cx="12" cy="12" r="3"/>
                                    </svg>
                                    Voir l'annonce
                                </a>
                            </div>
                        </div>
                    </article>
                }
            </div>
            <div class="actions-container">
                <a asp-controller="Home" asp-action="Index" class="button" data-variant="outline" data-size="md">
                    <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-arrow-left mr-2">
                        <path d="m12 19-7-7 7-7"/>
                        <path d="M19 12H5"/>
                    </svg>
                    Retour à l'accueil
                </a>
            </div>
        }
        else
        {
            <div class="empty-state2">
                <div class="empty-icon">
                    <svg xmlns="http://www.w3.org/2000/svg" width="48" height="48" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-credit-card">
                        <rect width="20" height="14" x="2" y="5" rx="2"/>
                        <line x1="2" x2="22" y1="10" y2="10"/>
                    </svg>
                </div>
                <h2>Aucun paiement effectué</h2>
                <p>Vous n'avez pas encore effectué de paiement sur notre plateforme.</p>
                <div class="payment-actions">
                    <a asp-controller="Advert" asp-action="Index" class="button" data-variant="primary" data-size="md">
                        <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-search mr-2">
                            <circle cx="11" cy="11" r="8"/>
                            <path d="m21 21-4.3-4.3"/>
                        </svg>
                        Explorer les annonces
                    </a>
                    <a asp-controller="Home" asp-action="Index" class="button" data-variant="outline" data-size="md">
                        <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-home mr-2">
                            <path d="m3 9 9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z"/>
                            <polyline points="9 22 9 12 15 12 15 22"/>
                        </svg>
                        Retour à l'accueil
                    </a>
                </div>
            </div>
        }
    </div>
</main>

@functions {
    private string GetStatusVariant(string status)
    {
        return status.ToLower() switch
        {
            "completed" => "success",
            "paid" => "success",
            "pending" => "warning",
            "failed" => "error",
            "refunded" => "info",
            _ => "secondary"
        };
    }

    private string GetStatusText(string status)
    {
        return status.ToLower() switch
        {
            "completed" => "Complété",
            "paid" => "Payé",
            "pending" => "En attente",
            "failed" => "Échoué",
            "refunded" => "Remboursé",
            _ => status
        };
    }
}
