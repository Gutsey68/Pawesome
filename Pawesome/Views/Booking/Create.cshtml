@model Pawesome.Models.DTOs.Booking.CreateBookingDto
@{
    ViewData["Title"] = "Nouvelle réservation";
    var advert = ViewBag.Advert;
}

<div class="container booking-create-container">
    <div class="booking-create-header">
        <h1>Réserver cette prestation</h1>
    </div>

    <div class="booking-create-content">
        <div class="booking-form-container">
            <form asp-action="Create" method="post">
                <input type="hidden" asp-for="AdvertId" />
                
                <div class="booking-advert-summary">
                    <h2>Résumé de l'annonce</h2>
                    <div class="advert-summary-content">
                        <div class="advert-owner">
                            <img src="@(string.IsNullOrEmpty(advert.Owner.Photo) ? "/images/default-avatar.png" : advert.Owner.Photo)" alt="Photo de @advert.Owner.FullName" class="owner-photo">
                            <div class="owner-info">
                                <span class="owner-name">@advert.Owner.FullName</span>
                                <span class="advert-type">@(advert.IsPetSitter ? "Offre de pet sitting" : "Recherche d'un pet sitter")</span>
                            </div>
                        </div>
                        
                        <div class="advert-details">
                            <div class="detail-item">
                                <span class="detail-label">Période</span>
                                <span class="detail-value">Du @advert.StartDate.ToString("dd/MM/yyyy") au @advert.EndDate.ToString("dd/MM/yyyy")</span>
                            </div>
                            <div class="detail-item">
                                <span class="detail-label">Prix</span>
                                <span class="detail-value price">@advert.Amount.ToString("C")</span>
                            </div>
                            <div class="detail-item">
                                <span class="detail-label">Animaux</span>
                                <span class="detail-value">
                                    @{
                                        var petNames = new List<string>();
                                        foreach (var pet in advert.Pets)
                                        {
                                            petNames.Add(pet.Name);
                                        }
                                    }
                                    @string.Join(", ", petNames)
                                </span>
                            </div>
                        </div>
                    </div>
                </div>
                
                <div class="booking-form-section">
                    <h2>Détails de la réservation</h2>
                    
                    <div class="form-group">
                        <label asp-for="StartDate">Date de début</label>
                        <input asp-for="StartDate" type="date" class="form-control" min="@DateTime.Now.ToString("yyyy-MM-dd")" value="@Model.StartDate.ToString("yyyy-MM-dd")" required />
                        <span asp-validation-for="StartDate" class="validation-message"></span>
                    </div>
                    
                    <div class="form-group">
                        <label asp-for="EndDate">Date de fin</label>
                        <input asp-for="EndDate" type="date" class="form-control" min="@DateTime.Now.ToString("yyyy-MM-dd")" value="@Model.EndDate.ToString("yyyy-MM-dd")" required />
                        <span asp-validation-for="EndDate" class="validation-message"></span>
                    </div>
                    
                    <div class="form-group">
                        <label asp-for="Message">Informations supplémentaires</label>
                        <textarea asp-for="Message" class="form-control" rows="4" placeholder="Indiquez ici toute information supplémentaire pour le pet sitter..."></textarea>
                        <span asp-validation-for="Message" class="validation-message"></span>
                    </div>
                </div>
                
                <div class="booking-payment-notice">
                    <div class="alert" data-variant="info">
                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                            <circle cx="12" cy="12" r="10"></circle>
                            <path d="M12 16v-4"></path>
                            <path d="M12 8h.01"></path>
                        </svg>
                        <div>
                            <h4>À propos du paiement</h4>
                            <p>Votre carte bancaire sera autorisée pour le montant de @advert.Amount.ToString("C"), mais le paiement ne sera débité qu'après la validation de la prestation.</p>
                        </div>
                    </div>
                </div>
                
                <div class="form-actions">
                    <a asp-controller="Advert" asp-action="Details" asp-route-id="@advert.Id" class="button" data-variant="outline">Annuler</a>
                    <a asp-controller="Payment" asp-action="Checkout" asp-route-advertId="@Model.AdvertId" type="submit" class="button" data-variant="primary">
                        Continuer vers le paiement
                        <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                            <path d="m9 18 6-6-6-6"></path>
                        </svg>
                    </a>
                </div>
            </form>
        </div>
        
        <div class="booking-sidebar">
            <div class="booking-summary-card">
                <h3>Résumé du prix</h3>
                <div class="price-details">
                    <div class="price-item">
                        <span class="price-label">Prix par jour</span>
                        <span class="price-value">@(advert.Amount / (advert.EndDate - advert.StartDate).Days)</span>
                    </div>
                    <div class="price-item">
                        <span class="price-label">Nombre de jours</span>
                        <span class="price-value">@((advert.EndDate - advert.StartDate).Days)</span>
                    </div>
                    <div class="price-divider"></div>
                    <div class="price-item total">
                        <span class="price-label">Total</span>
                        <span class="price-value">@advert.Amount</span>
                    </div>
                </div>
                
                <div class="payment-policy">
                    <h4>Conditions de paiement</h4>
                    <ul>
                        <li>La carte est autorisée mais non débitée immédiatement</li>
                        <li>Le paiement est capturé après validation de la prestation</li>
                        <li>Vous pouvez annuler avant la confirmation par le pet sitter</li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const startDateInput = document.getElementById('StartDate');
            const endDateInput = document.getElementById('EndDate');
            
            startDateInput.addEventListener('change', function () {
                if (endDateInput.value && new Date(startDateInput.value) > new Date(endDateInput.value)) {
                    endDateInput.value = startDateInput.value;
                }
                endDateInput.min = startDateInput.value;
            });
            
            endDateInput.min = startDateInput.value;
        });
    </script>
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}