services:
  pawesome:
    env_file:
      - pawesome.env
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    image: ghcr.io/gutsey68/pawesome:main
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.pawesome.rule=Host(`pawesome.club`)"
      - "traefik.http.routers.pawesome.entrypoints=websecure"
      - "traefik.http.routers.pawesome.tls.certresolver=pawesome"
      - "traefik.http.services.pawesome.loadbalancer.server.port=8080"
      - "traefik.docker.network=traefik-proxy"
    networks:
      - pawesome-network
      - traefik-proxy
    depends_on:
      pawesome-db:
        condition: service_healthy

  pawesome-db:
    image: postgres:17-alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - pawesome-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  db_data:

networks:
  pawesome-network:
    driver: bridge
  traefik-proxy:
    external: true
