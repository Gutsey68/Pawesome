services:
  reverse-proxy:
    image: traefik:v3.3
    command: --configFile=/etc/traefik/traefik.toml --api.insecure=false --providers.docker
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik/traefik.toml:/etc/traefik/traefik.toml
      - /etc/letsencrypt/live/segau.dipsw-ccicampus.dev:/etc/traefik/certs
    networks:
      - pawesome-network
  
  pawesome:
    image: pawesome
    build:
      context: .
      dockerfile: Pawesome/Dockerfile
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.pawesome.rule=Host(`segau.dipsw-ccicampus.dev`)"
      - "traefik.http.routers.pawesome.entrypoints=websecure"
      - "traefik.http.routers.pawesome.tls=true"
      - "traefik.http.routers.pawesome.tls.domains[0].main=segau.dipsw-ccicampus.dev"
    networks:
      - pawesome-network
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:latest
    environment:
      POSTGRES_USER: pawesome
      POSTGRES_PASSWORD: pawesome
      POSTGRES_DB: pawesome
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - pawesome-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U pawesome" ]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

volumes:
  db_data:

networks:
  pawesome-network:
    driver: bridge